{"version":3,"sources":["components/Activities/person.jpg","components/Gym/logo.png","utilities/fakedb.js","components/Activities/Activity.js","components/Exercises/Exercise.js","components/Blogs/Blogs.js","components/Gym/Gym.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","getDb","localStorage","getItem","updateDb","cart","setItem","JSON","stringify","Activity","props","_useState","useState","_useState2","Object","slicedToArray","time","setTime","summary","console","log","_step","total","updatedTime","_iterator","_createForOfIteratorHelper","s","n","done","exercise","value","quantity","err","e","f","updateLocalStorage","id","testObject","retrievedObject","parse","react_default","a","createElement","className","src","person","alt","srcset","style","marginTop","marginRight","onClick","Exercise","_props$exercise","name","img","handleExerciseCalculation","Blogs","Gym","exercises","setExercises","_useState3","_useState4","setSummary","useEffect","fetch","then","res","json","data","storedCard","exists","getStoredCart","savedCard","_loop","addedActivity","find","push","newSummary","concat","toConsumableArray","summary_cart","newCount","addToDb","logo","height","width","map","components_Exercises_Exercise","key","components_Activities_Activity","components_Blogs_Blogs","App","components_Gym_Gym","reportWebVitals","onPerfEntry","Function","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.239f815d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/person.b66eecc4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2dee1c5e.png\";","// use local storage as your db for now\nconst addToDb = id => {\n  const exists = getDb();\n  let summary_cart = {};\n  if (!exists) {\n    summary_cart[id] = 1;\n  }\n  else {\n    summary_cart = JSON.parse(exists);\n    if (summary_cart[id]) {\n      const newCount = summary_cart[id] + 1;\n      summary_cart[id] = newCount;\n    }\n    else {\n      summary_cart[id] = 1;\n    }\n  }\n  updateDb(summary_cart);\n}\n\nconst getDb = () => localStorage.getItem('summary_cart');\nconst updateDb = cart => {\n  localStorage.setItem('summary_cart', JSON.stringify(cart));\n}\n\nconst removeFromDb = id => {\n  const exists = getDb();\n  if (!exists) {\n\n  }\n  else {\n    const summary_cart = JSON.parse(exists);\n    delete summary_cart[id];\n    updateDb(summary_cart);\n  }\n}\n\nconst getStoredCart = () => {\n  const exists = getDb();\n  return exists ? JSON.parse(exists) : {};\n}\n\nconst clearTheCart = () => {\n  localStorage.removeItem('summary_cart');\n}\n\nexport { addToDb, removeFromDb as deleteFromDb, clearTheCart, getStoredCart }\n","import './Activity.css'\nimport person from './person.jpg'\nimport React, { useState } from \"react\";\n\n\n\nconst Activity = (props) => {\n\n\n    const [time, setTime] = useState([]);\n\n\n    const { summary } = props;\n\n    console.log(summary);\n\n    let total = 0;\n    let quantity = 0;\n    let updatedTime = 0;\n\n    for (const exercise of summary) {\n        quantity = quantity + exercise.quantity;\n        total = total + (exercise.time * exercise.quantity);\n    }\n\n    function updateLocalStorage(id) {\n        let testObject = { time: id };\n        localStorage.setItem('testObject', JSON.stringify(testObject));\n        let retrievedObject = localStorage.getItem('testObject');\n        updatedTime = JSON.parse(retrievedObject).time;\n        setTime(updatedTime)\n    }\n\n\n    return (\n        <div className='activity'>\n            <div className='person'>\n                <div >\n                    <img className='person-img' src={person} alt=\"\" srcset=\"\" />\n                </div>\n                <div style={{ marginTop: 10 }}>\n                    <h3>Name: Chandler Bing </h3>\n                    <p>New York City </p>\n\n                </div>\n            </div>\n            <div className='info'>\n                <div style={{ marginRight: 15 }}>\n                    <h3>Weight: 75KG</h3>\n                </div>\n                <div style={{ marginRight: 15 }}>\n                    <h3>height: 6.1</h3>\n                </div>\n                <div>\n                    <h3>Age: 25</h3>\n                </div>\n            </div>\n\n            <div className='add-break'>\n                <h1>Add A Break</h1>\n                <div>\n                    <button onClick={() => updateLocalStorage(10)} className='time-btn'>10 min</button>\n                    <button onClick={() => updateLocalStorage(20)} className='time-btn'>20 min</button>\n                    <button onClick={() => updateLocalStorage(30)} className='time-btn'>30 min</button>\n                    <button onClick={() => updateLocalStorage(40)} className='time-btn'>40 min</button>\n                    <button onClick={() => updateLocalStorage(50)} className='time-btn'>50 min</button>\n                </div>\n            </div>\n\n\n            <div className='activity-details'>\n                <h1>Activity Details</h1>\n                <p>Exercise time: {total} Min</p>\n                <p>Break Time: {time} Min</p>\n            </div>\n\n            <div id=\"activity-completed\" className='activity-completed'>\n                <button className='activity-completed-btn'> Activity Completed</button>\n\n            </div>\n\n        </div >\n\n    );\n};\n\nexport default Activity;","import React from 'react';\nimport './Exercise.css'\n\n\nconst Exercise = (props) => {\n    const { name, img, time, id } = props.exercise;\n    const { handleExerciseCalculation } = props\n\n    return (\n        <div className='exercise'>\n            <img src={img} alt=\"\" srcset=\"\" />\n            <h3>Exercise Name: {name}</h3>\n            <p>Time: {time} min</p>\n            <button onClick={() => handleExerciseCalculation(props.exercise)} id={id} className='exercise-btn'>Add to list</button>\n        </div>\n    );\n};\n\nexport default Exercise;","import React from 'react';\nimport './Blogs.css'\n\nconst Blogs = () => {\n    return (\n        <div >\n            <h1 className='header-text'>React Basics Question/Answer</h1>\n            <div className='blogs'>\n                <div className='box'>\n                    <h4>Q1: How does reacts works?</h4>\n                    <p>React.js is one of the most talked about JavaScript web frameworks in years. React uses a declarative paradigm that makes it easier to reason about your application and aims to be both efficient and flexible. It designs simple views for each state in your application, and React will efficiently update and render just the right component when your data changes.</p>\n\n                </div>\n                <div className='box'>\n                    <h4>Q2: Difference between Props and State</h4>\n                    <p>The state is an updatable structure that is used to contain data or information about the component and can change over time. but Props are read-only components.\n                        The change in state can happen as a response to user action or system event.  A state must be kept as simple as possible. It represents the component's local state or information. Props is an object which stores the value of attributes of a tag and work similar to the HTML attributes. It allows passing data from one component to other components. </p>\n                </div>\n                <div className='box'>\n                    <h4>O3: Use case of useState</h4>\n                    <p>\n                        The useEffect Hook allows you to perform side effects in your components. Some examples of side effects are: fetching data, directly updating the DOM, and timers. useEffect accepts two arguments. The second argument is optional.</p>\n                </div>\n            </div>\n\n            <br />\n        </div>\n    );\n};\n\nexport default Blogs;","import React, { useEffect, useState } from 'react';\nimport { addToDb, getStoredCart } from '../../utilities/fakedb'\nimport Activity from '../Activities/Activity';\nimport Exercise from '../Exercises/Exercise';\nimport Blogs from '../Blogs/Blogs';\nimport logo from '../Gym/logo.png'\nimport './Gym.css'\n\nconst Gym = () => {\n\n    const [exercises, setExercises] = useState([]);\n\n    const [summary, setSummary] = useState([]);\n\n\n    useEffect(() => {\n        fetch('exercises.json')\n            .then(res => res.json())\n            .then(data => setExercises(data))\n\n    }, []);\n\n    useEffect(() => {\n        const storedCard = getStoredCart();\n        // console.log(storedCard);\n        const savedCard = []\n\n        for (const id in storedCard) {\n            const addedActivity = exercises.find(exercise => exercise.id === id);\n            if (addedActivity) {\n                const quantity = storedCard[id];\n                addedActivity.quantity = quantity;\n                savedCard.push(addedActivity)\n\n                console.log(addedActivity)\n            }\n\n        }\n        setSummary(savedCard)\n\n\n    }, [exercises]);\n\n\n\n    const handleExerciseCalculation = (exercise) => {\n        // console.log(exercise);\n        const newSummary = [...summary, exercise];\n        setSummary(newSummary)\n        addToDb(exercise.id)\n    }\n\n\n    return (\n\n        <div className='gym-main' >\n\n\n            <div className='gym-container'>\n                <div >\n                    <nav className='header'>\n                        <div>\n                            <img src={logo} alt=\"\" srcset=\"\" height={100} width={100} />\n                        </div>\n                        <div>\n                            YooGa\n                        </div>\n                    </nav>\n\n                    <div className='exercise-container'>\n                        {/* <h1>Exercise Length: {exercises.length}</h1> */}\n                        {\n                            exercises.map(exercise =>\n                                <Exercise\n                                    key={exercise.id}\n                                    exercise={exercise}\n                                    handleExerciseCalculation={handleExerciseCalculation}\n                                ></Exercise>)\n                        }\n\n                    </div>\n\n                </div>\n                <div className='activity-container '>\n\n                    <Activity summary={summary} >\n\n                    </Activity>\n                </div>\n\n            </div>\n\n            <div>\n                <Blogs></Blogs>\n            </div>\n\n\n        </div>\n    );\n};\n\nexport default Gym;","import React from 'react'\nimport './App.css';\nimport Gym from './components/Gym/Gym';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Gym></Gym>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}